{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TasksList.js","components/Categories.js","components/Footer.js","components/App.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","msg","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","length","props","add","className","type","placeholder","this","onChange","htmlFor","id","min","onClick","Component","Task","style","imp","fontWeight","borderRight","td","task","active","important","finishDate","deleted","addDate","change","delete","finish","TaskList","activeTasks","tasks","filter","map","key","doneTasks","importantTasks","deletedTasks","trash","numberOfCategory","show","Categories","todo","del","done","Footer","App","deletedTasksTable","selectedCategory","addTask","count","prevState","deleteTask","index","findIndex","push","getTime","splice","changeTaskStatus","forEach","catToDo","catDone","catDel","catImportant","flexBasis","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bae5df6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends Component {\r\n\r\n    minDate = new Date().toISOString().slice(0, 10);\r\n\r\n    state = {\r\n        text: '',\r\n        checked: false,\r\n        date: this.minDate,\r\n        msg: '',\r\n    }\r\n\r\n    handleText = e => {\r\n        this.setState({\r\n            text: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({\r\n            checked: e.target.checked,\r\n        })\r\n    }\r\n\r\n    handleDate = e => {\r\n        this.setState({\r\n            date: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n\r\n        const { text, date, checked } = this.state;\r\n\r\n        if (text.length > 2) {\r\n\r\n            const add = this.props.add(text, date, checked);\r\n\r\n            if (add) {\r\n                this.setState({\r\n                    text: '',\r\n                    checked: false,\r\n                    date: this.minDate,\r\n                    msg: '',\r\n                })\r\n            }\r\n        } else {\r\n            // console.log(this.state.msg);\r\n\r\n            this.setState({\r\n                msg: 'Text must have more than 3 chars.',\r\n            })\r\n            // console.log(this.state.msg);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Task to do\"\r\n                    value={this.state.text}\r\n                    onChange={this.handleText}\r\n                />\r\n\r\n                <label htmlFor=\"important\">\r\n                    <input\r\n                        id=\"important\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.handleCheckbox}\r\n                    />\r\n                Priority\r\n                </label><br />\r\n\r\n                <span className=\"validation\">{this.state.msg}</span><br />\r\n\r\n                <label htmlFor=\"date\">\r\n                    <input\r\n                        type=\"date\"\r\n                        value={this.state.date}\r\n                        min={this.minDate}\r\n                        onChange={this.handleDate}\r\n                    />\r\n                    Perform to\r\n                </label><br /><br />\r\n\r\n                <button\r\n                    className=\"addTaskButton\"\r\n                    onClick={this.handleClick}\r\n                >\r\n                    <i className=\"fas fa-plus\"></i> Add task\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = props => {\r\n\r\n    const style = {\r\n        imp: { fontWeight: 'bold', borderRight: '1px dotted rgba(240, 168, 86, .5)', },\r\n        td: { borderRight: '1px dotted rgba(240, 168, 86, .5)', },\r\n    }\r\n\r\n    const { text, date, id, active, important, finishDate, deleted } = props.task;\r\n\r\n\r\n    if (active && !deleted) {\r\n        const minDate = new Date().toISOString().slice(0, 10);\r\n        const addDate = new Date(minDate).toISOString().slice(0, 10);\r\n\r\n        return (\r\n            <tr>\r\n                <td style={style.td}>{important ? 'imp.' : null}</td>\r\n                <td\r\n                    style={important ? style.imp : style.td}\r\n                >\r\n                    {text}\r\n                </td>\r\n                <td style={style.td}>{date}</td>\r\n                <td style={style.td}>{addDate}</td>\r\n                <td>\r\n                    <button\r\n                        className=\"actions actionDone\"\r\n                        onClick={() => props.change(id)}\r\n                    >\r\n                        <i className=\"fas fa-check-square\"></i>\r\n                    </button>\r\n                    <button\r\n                        className=\"actions actionDelete\"\r\n                        onClick={() => props.delete(id)}\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n    if (!active && !deleted) {\r\n        const minDate = new Date().toISOString().slice(0, 10);\r\n        const finish = new Date(finishDate).toISOString().slice(0, 10);\r\n        return (\r\n            <tr>\r\n                <td style={style.td}>{important ? 'imp.' : null}</td>\r\n                <td\r\n                    style={important ? style.imp : style.td}\r\n                >\r\n                    {text}\r\n                </td>\r\n                <td style={style.td}>{minDate}</td>\r\n                <td style={style.td}>{finish}</td>\r\n                <td>\r\n                    <button\r\n                        className=\"actions actionDelete\"\r\n                        onClick={() => props.delete(id)}\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n\r\n\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    if (important && !deleted) {\r\n        const minDate = new Date().toISOString().slice(0, 10);\r\n        return (\r\n            <tr>\r\n                <td style={style.td}>{important ? 'imp.' : null}</td>\r\n                <td\r\n                    style={important ? style.imp : style.td}\r\n                >\r\n                    {text}\r\n                </td>\r\n                <td style={style.td}>{date}</td>\r\n                <td style={style.td}>{minDate}</td>\r\n                <td>\r\n                    <button\r\n                        className=\"actions actionDone\"\r\n                        onClick={() => props.change(id)}\r\n                    >\r\n                        <i className=\"fas fa-check-square\"></i>\r\n                    </button>\r\n                    <button\r\n                        className=\"actions actionDelete\"\r\n                        onClick={() => props.delete(id)}\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    if ((deleted && active) || (deleted && !active) || (deleted && !active && important) || (deleted && active && important)) {\r\n        const minDate = new Date().toISOString().slice(0, 10);\r\n        const finish = new Date(finishDate).toISOString().slice(0, 10);\r\n        return (\r\n            <tr>\r\n                <td style={style.td}>{important ? 'imp.' : null}</td>\r\n                <td\r\n                    style={important ? style.imp : style.td}\r\n                >\r\n                    {text}\r\n                </td>\r\n                <td style={style.td}>{minDate}</td>\r\n                <td style={style.td}>{finish}</td>\r\n                <td>None</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\nimport './TaskList.css';\r\n\r\nconst TaskList = props => {\r\n\r\n    // console.log(props);\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const activeTasks = active.map(task => (\r\n        <Task\r\n            key={task.id}\r\n            task={task}\r\n            delete={props.delete}\r\n            change={props.change}\r\n        />\r\n    )\r\n    )\r\n\r\n    const done = props.tasks.filter(task => !task.active);\r\n    const doneTasks = done.map(task => (\r\n        <Task\r\n            key={task.id}\r\n            task={task}\r\n            delete={props.delete}\r\n            change={props.change}\r\n        />\r\n    )\r\n    )\r\n\r\n    const imp = props.tasks.filter(task => task.important);\r\n    const importantTasks = imp.map(task => (\r\n        <Task\r\n            key={task.id}\r\n            task={task}\r\n            delete={props.delete}\r\n            change={props.change}\r\n        />\r\n    ))\r\n\r\n\r\n    const deletedTable = props.trash;\r\n    const deletedTasks = deletedTable.map(task => (\r\n        <Task\r\n            key={task.id}\r\n            task={task}\r\n            delete={props.delete}\r\n            change={props.change}\r\n        />\r\n    ))\r\n\r\n    const numberOfCategory = props.show;\r\n    // console.log(numberOfCategory);\r\n\r\n    if (numberOfCategory === 1) {\r\n        return (\r\n            <div className=\"taskListContainer\">\r\n                <p>Active tasks: {activeTasks.length}</p>\r\n                <table\r\n                    className=\"tasksTable\"\r\n                >\r\n                    <tbody>\r\n                        <tr className=\"titleRow\">\r\n                            <td>!</td>\r\n                            <td>Task</td>\r\n                            <td>End date</td>\r\n                            <td>Added</td>\r\n                            <td>Actions</td>\r\n                        </tr>\r\n                        {activeTasks}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    } else if (numberOfCategory === 2) {\r\n        return (\r\n            <div className=\"taskListContainer\">\r\n                <p>Done tasks: {doneTasks.length}</p>\r\n                <table\r\n                    className=\"tasksTable\"\r\n                >\r\n                    <tbody>\r\n                        <tr className=\"titleRow\">\r\n                            <td>!</td>\r\n                            <td>Task</td>\r\n                            <td>Added</td>\r\n                            <td>Finished</td>\r\n                            <td>Actions</td>\r\n                        </tr>\r\n                        {doneTasks}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    } else if (numberOfCategory === 3) {\r\n        return (\r\n            <div className=\"taskListContainer\">\r\n                <p>Deleted tasks: {deletedTasks.length}</p>\r\n                <table\r\n                    className=\"tasksTable\"\r\n                >\r\n                    <tbody>\r\n                        <tr className=\"titleRow\">\r\n                            <td>!</td>\r\n                            <td>Task</td>\r\n                            <td>Added</td>\r\n                            <td>Deleted</td>\r\n                            <td>Actions</td>\r\n                        </tr>\r\n                        {deletedTasks}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    } else if (numberOfCategory === 4) {\r\n        return (\r\n            <div className=\"taskListContainer\">\r\n                <p>Important tasks: {importantTasks.length}</p>\r\n                <table\r\n                    className=\"tasksTable\"\r\n                >\r\n                    <tbody>\r\n                        <tr className=\"titleRow\">\r\n                            <td>!</td>\r\n                            <td>Task</td>\r\n                            <td>End date</td>\r\n                            <td>Added</td>\r\n                            <td>Actions</td>\r\n                        </tr>\r\n                        {importantTasks}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport './Categories.css';\r\n\r\nconst Categories = props => {\r\n\r\n    const { todo, del, done, important } = props;\r\n\r\n    return (\r\n\r\n        <div className=\"cat\">\r\n            {/* <p className=\"catTitle\">Categories:</p> */}\r\n            <button\r\n                className=\"categoryButton\"\r\n                onClick={todo}\r\n            >\r\n                <i className=\"fas fa-tasks\"></i> Tasks to do\r\n            </button>\r\n            <button\r\n                className=\"categoryButton\"\r\n                onClick={done}\r\n            >\r\n                <i className=\"fas fa-check-square\"></i> Done tasks\r\n            </button>\r\n            <button\r\n                className=\"categoryButton\"\r\n                onClick={del}\r\n            >\r\n                <i className=\"far fa-trash-alt\"></i> Deleted tasks\r\n            </button>\r\n            <button\r\n                className=\"categoryButton\"\r\n                onClick={important}\r\n            >\r\n                <i className=\"fas fa-exclamation\"></i> Important tasks\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Categories;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            &copy; marcin p. / 2020\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport AddTask from './AddTask';\nimport TaskList from './TasksList';\nimport Categories from './Categories';\nimport Footer from './Footer';\nimport './App.css';\n\n// const API = '../../data/data.json';\n\nclass App extends Component {\n\n  // count = 0;\n  deletedTasksTable = [];\n\n  state = {\n    tasks: [],\n    selectedCategory: 1,\n  }\n\n  addTask = (text, date, important) => {\n    // console.log('Add object');\n    let count = this.state.tasks.length + this.deletedTasksTable.length;\n    const task = {\n      id: count,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null,\n      deleted: false,\n    }\n    // console.log(`Add object with id: ${task.id}`);\n\n    // this.count++;\n    count++;\n    // console.log(task);\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task],\n    }))\n\n    return true;\n\n  }\n\n  deleteTask = id => {\n    // console.log(`Delete element of id ${id}.`);\n\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex(task => task.id === id);\n    this.deletedTasksTable.push(tasks[index]);\n    this.deletedTasksTable[this.deletedTasksTable.length - 1].finishDate = new Date().getTime();\n    this.deletedTasksTable[this.deletedTasksTable.length - 1].deleted = true;\n    tasks.splice(index, 1);\n\n    // console.log(`Tasks after delete ${tasks}`);\n\n    this.setState({\n      tasks,\n    })\n\n    // console.log(this.deletedTasksTable);\n  }\n\n  changeTaskStatus = id => {\n    // console.log(`Change status for element with id ${id}.`);\n\n    const tasks = [...this.state.tasks];\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n\n    })\n    this.setState({\n      tasks,\n    })\n  }\n\n  catToDo = () => {\n    this.setState({\n      selectedCategory: 1,\n    })\n  }\n\n  catDone = () => {\n    this.setState({\n      selectedCategory: 2,\n    })\n  }\n\n  catDel = () => {\n    this.setState({\n      selectedCategory: 3,\n    })\n  }\n\n  catImportant = () => {\n    this.setState({\n      selectedCategory: 4,\n    })\n  }\n\n  // componentDidMount() {\n  //   fetch(API)\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       this.setState({\n  //         tasks: data,\n  //       })\n  //     });\n  // }\n\n  render() {\n\n    return (\n\n      <div className=\"app\">\n\n        <section className=\"tasksContainer\">\n          <div className=\"category\">\n            <Categories\n              todo={this.catToDo}\n              done={this.catDone}\n              del={this.catDel}\n              important={this.catImportant}\n            />\n          </div>\n\n          {this.state.selectedCategory === 1 ? <div className=\"addTask\"><AddTask add={this.addTask} /></div> : null}\n\n          <div className=\"taskList\" style={this.state.selectedCategory === 1 ? null : { flexBasis: '89vh' }}>\n            <TaskList\n              tasks={this.state.tasks}\n              delete={this.deleteTask}\n              change={this.changeTaskStatus}\n              trash={this.deletedTasksTable}\n              show={this.state.selectedCategory}\n            />\n          </div>\n          <footer className=\"footer\">\n            <Footer />\n          </footer>\n        </section>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}